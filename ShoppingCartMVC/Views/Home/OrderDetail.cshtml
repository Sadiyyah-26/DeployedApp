@model IEnumerable<ShoppingCartMVC.Models.tblOrder>
<head>
    <title>Order History</title>
    <style>
        .btn-info {
            font-size: 20px;
            font-weight: bold;
        }

        .btn-danger {
            font-size: 20px;
            font-weight: bold;
        }

        .btn-dark {
            font-size: 20px;
            font-weight: bold;
        }

        .btn-primary {
            font-size: 20px;
            font-weight: bold;
        }

        .btn-success {
            font-size: 20px;
            font-weight: bold;
        }

        .btn-warning {
            font-size: 20px;
            font-weight: bold;
        }
    </style>
</head>

@{
    // Order the data by OrderID in descending order
    var sortedOrders = Model.OrderByDescending(o => o.OrderId).ToList();
}
<br /><br />


    <table class="table">
        <tr>
            <th>
                Invoice Num #
            </th>
            <th>
                Total
            </th>
            <th>
                Payment Method
            </th>
            <th>
                Payment Status
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TblInvoice.DC_Method) @*my changes for delivery*@
            </th>
            <th>
                @Html.DisplayName("Order Date")
            </th>

            <th>Order Status</th>

            <th>Invoice</th>
        </tr>

        @foreach (var item in sortedOrders)
        {
            <tr>
                <td>#@Html.DisplayFor(modelitem => item.InvoiceId)</td>

                <td>
                    R @Html.DisplayFor(modelItem => item.TblInvoice.Bill).00
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TblInvoice.Payment)
                </td>
                <td>
                    @if (item.TblInvoice.Payment_Status == "Paid")
                    {
                        <span class="badge badge-success">Paid</span>
                    }
                    else
                    {
                        <span class="badge badge-warning">Pending</span>
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TblInvoice.DC_Method) @*my changes for delivery*@
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.OrderDate)
                </td>

                <td>
                    @if (item.TblInvoice.Status == "Out for Delivery")
                    {
                        <span class="btn btn-warning">Out for Delivery</span>
                    }
                    else if (item.TblInvoice.Status == "Order Delivered")
                    {
                        <span class="btn btn-success">Order Delivered</span>
                    }
                    else if (item.TblInvoice.Status == "Order Collected")
                    {
                        <span class="btn btn-success">Order Collected</span>
                    }
                    else
                    if (item.TblInvoice.Status == "Cancelled")
                    {
                        <span class="btn btn-danger">Cancelled</span>
                    }
                    else
                    {
                        <a href="@Url.Action("CancelOrder", "Home", new { InvoiceId = item.InvoiceId })" class="btn btn-info">View Order Placed</a>
                    }

                </td>
                <td>
                    @*/changes*@
                    <a href="@Url.Action("Invoice", "Home", new { id = item.InvoiceId })" class="btn btn-primary">Print</a>
                </td>
               

            </tr>
        }

    </table>

<br />
<br />
<br />
<br />
<br />
<br />
<br />
<br />
<br />
<br />
<br />
<br />
<br />
<br />
<br />
